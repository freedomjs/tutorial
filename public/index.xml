<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>freedom.js tutorial</title>
    <link>http://www.freedomjs.org/tutorial/</link>
    <description>Recent content on freedom.js tutorial</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Feb 2015 13:29:48 -0800</lastBuildDate>
    <atom:link href="http://www.freedomjs.org/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>01 - Introduction</title>
      <link>http://www.freedomjs.org/tutorial/01introduction/</link>
      <pubDate>Thu, 26 Feb 2015 13:29:48 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/01introduction/</guid>
      <description>

&lt;h1 id=&#34;what-is-freedom-js-and-why-should-i-care:c671dff226dbd268b9535b226b05b473&#34;&gt;What is freedom.js, and why should I care?&lt;/h1&gt;

&lt;p&gt;freedom.js is a JavaScript framework that facilitates developing
peer-to-peer (P2P) applications. These sorts of applications have
been around for awhile and can be pretty nifty - they give the
developer a low-cost way to scale up a resilient application, and
they give users more control over their own data. But building them
can be challenging, requiring a sophisticated understanding of
networking and security. Doing so in the browser - the increasingly
important yet constantly changing application platform - is even harder.&lt;/p&gt;

&lt;p&gt;This is where freedom.js comes in - we provide a framework where
common functionality (social, storage, network transport, etc.) has a
standard interface and a suite of providers that run across typical
JavaScript platforms (currently Chrome, Firefox, and Node.js). Want to
write an app that lets people connect directly to each other in their
browsers, choosing their friends from existing social networks?
freedom.js takes care of the details, letting you focus on your
application logic.&lt;/p&gt;

&lt;p&gt;How does this work? You&amp;rsquo;ll learn more throughout the tutorial, but the
core of it is that a freedom.js app specifies its API and dependencies
via a manifest, and then freedom.js uses
&lt;a href=&#34;https://en.wikipedia.org/wiki/Web_worker&#34;&gt;web workers&lt;/a&gt; to run the
application and related modules. These modules run independently and
so must communicate (message passing via the specified API), but this
isolation and abstraction allows for applications to run across
computers and users - resulting in decentralized peer-to-peer applications.&lt;/p&gt;

&lt;p&gt;freedom.js is open source
(&lt;a href=&#34;http://opensource.org/licenses/Apache-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;)
and you can find our repositories on
&lt;a href=&#34;https://github.com/freedomjs&#34;&gt;GitHub&lt;/a&gt;. We&amp;rsquo;re actively developing and
enhancing the platform, and welcome community contributions. One of
the best ways to get started is to just use freedom.js to develop an
application - so think some about what you want to make, and read on!&lt;/p&gt;

&lt;h1 id=&#34;what-are-some-apps-that-have-been-built-using-freedom-js:c671dff226dbd268b9535b226b05b473&#34;&gt;What are some apps that have been built using freedom.js?&lt;/h1&gt;

&lt;p&gt;To get an idea of the sorts of things you can do with freedom.js, here
are some existing applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Take Turns, Sally&lt;/strong&gt;
(&lt;a href=&#34;https://github.com/ryscheng/taketurns&#34;&gt;repo&lt;/a&gt;,
&lt;a href=&#34;http://taketurns.sally.wtf/&#34;&gt;app&lt;/a&gt;) - a freedom.js application that
exposes a simple queue. Everyone in the meeting pops open their
laptop/smartphone and navigates to the URL. Agree on a &amp;ldquo;room name&amp;rdquo; and
choose 1 leader in the group. Then queue up to talk!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uProxy&lt;/strong&gt; (&lt;a href=&#34;https://github.com/uproxy&#34;&gt;repos&lt;/a&gt;,
&lt;a href=&#34;https://www.uproxy.org/&#34;&gt;homepage&lt;/a&gt;) - a browser extension that lets
users share alternative more secure routes to the Internet. It&amp;rsquo;s like
a personalized VPN service that you set up for yourself and your
friends. uProxy helps users protect each other from third parties who
may try to watch, block, or redirect users&amp;rsquo; Internet connections.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dorabella&lt;/strong&gt; (links forthcoming) - an encrypted chat application,
allowing users to generate and exchange keys to secure their further
communication. This is the application that we will build together in
this tutorial - you&amp;rsquo;ll learn about social and cryptography providers,
as well as general freedom.js module design and structure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;freedom.js also has
&lt;a href=&#34;http://www.freedomjs.org/dist/freedom/latest/demo/&#34;&gt;demo apps&lt;/a&gt; that
can serve as useful examples while developing (including a chat demo
that is the base of Dorabella).&lt;/p&gt;

&lt;h1 id=&#34;tutorial-outline:c671dff226dbd268b9535b226b05b473&#34;&gt;Tutorial outline&lt;/h1&gt;

&lt;p&gt;The tutorial steps through the development of Dorabella, mentioned
above. If you&amp;rsquo;re a new developer then soldiering on in order is
probably a good idea, but if you&amp;rsquo;re already comfortable with the
JavaScript ecosystem then picking and choosing or skipping through may
make sense. The topics of the remaining sections are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../02devsetup&#34;&gt;Dev Environment Setup&lt;/a&gt; - the basic commands you need to install
freedom.js and related development tools&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../03howfreedomworks&#34;&gt;How freedom.js works&lt;/a&gt; - an explanation of the control and messaging
flow of a freedom.js-powered application&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../04dorabelladesign&#34;&gt;Designing Dorabella&lt;/a&gt; - how to plan the structure and API of an app&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../05dorabellacore&#34;&gt;The core of Dorabella&lt;/a&gt; - once it&amp;rsquo;s planned, how to get started
implementing the boilerplate and beyond&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../06dorabellachat&#34;&gt;Implementing chat&lt;/a&gt; - the main task of Dorabella, and a tour of the
freedom.js social interface&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../07dorabellacrypto&#34;&gt;Using crypto in freedom.js&lt;/a&gt; - an important but sensitive part of
development, also provided by freedom.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../08dorabellapolish&#34;&gt;Polishing Dorabella&lt;/a&gt; - testing, automation, and those other tweaks
that make an app ready to go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../09deploymentandbeyond&#34;&gt;Deployment and Beyond&lt;/a&gt; - now that the app is written, it&amp;rsquo;s time to
get it out there&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../10howtohelpfreedom&#34;&gt;How to help freedom.js&lt;/a&gt; - we&amp;rsquo;re an open source project and welcome
contributions!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>02 - Dev Environment Setup</title>
      <link>http://www.freedomjs.org/tutorial/02devsetup/</link>
      <pubDate>Thu, 26 Feb 2015 13:28:59 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/02devsetup/</guid>
      <description>

&lt;h1 id=&#34;quick-start:649baccfa024a46ec6ccf587bf61cd3c&#34;&gt;Quick Start&lt;/h1&gt;

&lt;p&gt;Already comfortable with modern JavaScript development? Then you can
easily get started by using &lt;a href=&#34;http://yeoman.io&#34;&gt;Yeoman&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g yo  # if you don&#39;t have yo already
npm install -g generator-freedom
mkdir my-freedom-app
cd my-freedom-app
yo freedom
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or if you prefer pulling in boilerplate with git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TODO
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you&amp;rsquo;re set, skip ahead to
&lt;a href=&#34;../03howfreedomworks&#34;&gt;how freedom.js works&lt;/a&gt;. Need a bit more
explanation on the above? Read on!&lt;/p&gt;

&lt;h1 id=&#34;details:649baccfa024a46ec6ccf587bf61cd3c&#34;&gt;Details&lt;/h1&gt;

&lt;p&gt;Strictly speaking, all you need to develop with freedom.js is the
&lt;a href=&#34;http://www.freedomjs.org/dist/freedom/latest/freedom.js&#34;&gt;library itself&lt;/a&gt;,
a browser, and a web server (for example,
&lt;a href=&#34;https://docs.python.org/2/library/simplehttpserver.html&#34;&gt;SimpleHTTPServer&lt;/a&gt;
for Python 2.x). You are welcome to take this minimalist approach,
though you may want to at least
&lt;a href=&#34;http://TODO&#34;&gt;clone the starter git repository&lt;/a&gt; for boilerplate.&lt;/p&gt;

&lt;p&gt;An arguably more convenient setup is to embrace the modern JavaScript
ecosystem. There are many tools and it can be overwhelming at first,
but you really just need to familiarize yourself with a few of them to
get started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.npmjs.com/&#34;&gt;npm&lt;/a&gt; - a package manager (installed from
&lt;a href=&#34;http://nodejs.org/&#34;&gt;nodejs.org&lt;/a&gt;), lets you fetch freedom.js and
related modules/dependencies/tooling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gruntjs.com/&#34;&gt;grunt&lt;/a&gt; - a task runner, facilitates linting,
building, testing, and deploying projects&lt;/li&gt;
&lt;li&gt;&amp;hellip; (TODO testing, maybe alternatives like gulp, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;freedom.js is agnostic about the tools you use, but our provided
generators and scripts generally assume use of npm, grunt, TODO (tests
etc.). Getting started means
&lt;a href=&#34;https://docs.npmjs.com/getting-started/installing-node&#34;&gt;installing node and npm&lt;/a&gt;,
then running a variety of &lt;code&gt;npm install&lt;/code&gt; commands. The common tools
you&amp;rsquo;ll use across projects should be installed globally (&lt;code&gt;-g&lt;/code&gt;), e.g.:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g grunt-cli
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Projects themselves can have their own &lt;code&gt;package.json&lt;/code&gt; file that
specifies dependencies, which are installed locally by simply running
&lt;code&gt;npm install&lt;/code&gt; in that directory. Once you&amp;rsquo;ve set up your project this
way (and have a &lt;a href=&#34;http://gruntjs.com/sample-gruntfile&#34;&gt;Gruntfile&lt;/a&gt; - an
initial one is provided by our generator) you can run &lt;code&gt;grunt -h&lt;/code&gt; to
see the available Grunt tasks. They are run with &lt;code&gt;grunt taskname&lt;/code&gt;, or
just &lt;code&gt;grunt&lt;/code&gt; for the default task. You can also dive into
&lt;code&gt;Gruntfile.js&lt;/code&gt; and edit or add your own tasks.&lt;/p&gt;

&lt;p&gt;Once you have your setup to your liking, continue on and learn more
about freedom.js itself!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>03 - How freedom.js works</title>
      <link>http://www.freedomjs.org/tutorial/03howfreedomworks/</link>
      <pubDate>Thu, 26 Feb 2015 13:27:01 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/03howfreedomworks/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt; - this section isn&amp;rsquo;t integral to building a simple app,
 but it is valuable to get a slightly deeper understanding of the
 stack you are building on. You can
 &lt;a href=&#34;../04dorabelladesign&#34;&gt;safely skip to the next section&lt;/a&gt; if you wish,
 and potentially revisit here for reference as needed.&lt;/p&gt;

&lt;h1 id=&#34;understanding-the-boilerplate:ff6dd0f49b1ab8997b1c6fae35d70872&#34;&gt;Understanding the boilerplate&lt;/h1&gt;

&lt;p&gt;Regardless of how you chose to &lt;a href=&#34;../02devsetup&#34;&gt;do your dev setup&lt;/a&gt;,
you should now have a file hierarchy that looks something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;src/index.html
src/main.js
src/manifest.json
src/static/style.css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These files are your freedom.js module - they specify layout/browser
logic (&lt;code&gt;index.html&lt;/code&gt;), freedom.js application logic (&lt;code&gt;main.js&lt;/code&gt;),
freedom.js API and dependencies/permissions (&lt;code&gt;manifest.json&lt;/code&gt;), and
styling or other static resources such as graphics (&lt;code&gt;static/&lt;/code&gt;). In the
above list they all live off of &lt;code&gt;src/&lt;/code&gt; to reflect that they are the
sourcecode view of your application - they may later be linted,
minified, and copied to e.g. &lt;code&gt;build/&lt;/code&gt; (to eventually be deployed).&lt;/p&gt;

&lt;p&gt;TODO more explanation for how above files interact.&lt;/p&gt;

&lt;p&gt;Depending on your choice of tooling, you may also have files like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Gruntfile.js
node_modules/...
package.json
.gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are best understood by looking up their respective
documentation, as described below.&lt;/p&gt;

&lt;h1 id=&#34;other-resources:ff6dd0f49b1ab8997b1c6fae35d70872&#34;&gt;Other resources&lt;/h1&gt;

&lt;p&gt;Any piece of computer technology is inevitably built on a deep stack
eventually going down to &lt;a href=&#34;http://xkcd.com/1349/&#34;&gt;sand and physics&lt;/a&gt; -
this tutorial focuses on giving you enough knowledge and context to
develop freedom.js modules, but should you find yourself wanting to
dig deeper then here are some places to start:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/freedomjs/freedom/wiki&#34;&gt;freedom.js wiki&lt;/a&gt; - more
documentation and API reference&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.npmjs.com/&#34;&gt;npm docs&lt;/a&gt; - more on how to both get
packages from npm and deploy your own&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://git-scm.com/&#34;&gt;git&lt;/a&gt; - there&amp;rsquo;s many tutorials out there, but
&lt;a href=&#34;http://jwiegley.github.io/git-from-the-bottom-up/&#34;&gt;Git from the Bottom Up&lt;/a&gt;
is a fine place to get started, and &lt;a href=&#34;http://try.github.io&#34;&gt;tryGit&lt;/a&gt;
is a quick interactive tutorial&lt;/li&gt;
&lt;li&gt;TODO more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;rsquo;s also valuable to learn about developing &amp;ldquo;normal&amp;rdquo; (centralized)
web applications. freedom.js requires thinking differently (especially
about data storage and peer communication), but it&amp;rsquo;s useful to
understand both perspectives. There is actually a fair amount of skill
overlap (understanding templates, network requests, etc.), and for
many &amp;ldquo;real-world&amp;rdquo; use cases a hybrid approach of centralized and
decentralized may be best. We will see this in the design of
Dorabella, which pragmatically depends on centralized social networks
as how most users keep track of and communicate with their friends.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>04 - Designing Dorabella</title>
      <link>http://www.freedomjs.org/tutorial/04dorabelladesign/</link>
      <pubDate>Thu, 26 Feb 2015 13:26:05 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/04dorabelladesign/</guid>
      <description></description>
    </item>
    
    <item>
      <title>05 - The core of Dorabella</title>
      <link>http://www.freedomjs.org/tutorial/05dorabellacore/</link>
      <pubDate>Thu, 26 Feb 2015 13:25:07 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/05dorabellacore/</guid>
      <description></description>
    </item>
    
    <item>
      <title>06 - Implementing chat</title>
      <link>http://www.freedomjs.org/tutorial/06dorabellachat/</link>
      <pubDate>Thu, 26 Feb 2015 13:24:09 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/06dorabellachat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>07 - Using crypto in freedom.js</title>
      <link>http://www.freedomjs.org/tutorial/07dorabellacrypto/</link>
      <pubDate>Thu, 26 Feb 2015 13:23:10 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/07dorabellacrypto/</guid>
      <description></description>
    </item>
    
    <item>
      <title>08 - Polishing Dorabella</title>
      <link>http://www.freedomjs.org/tutorial/08dorabellapolish/</link>
      <pubDate>Thu, 26 Feb 2015 13:22:19 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/08dorabellapolish/</guid>
      <description></description>
    </item>
    
    <item>
      <title>09 - Deployment and Beyond</title>
      <link>http://www.freedomjs.org/tutorial/09deploymentandbeyond/</link>
      <pubDate>Thu, 26 Feb 2015 13:21:22 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/09deploymentandbeyond/</guid>
      <description></description>
    </item>
    
    <item>
      <title>10 - How to help freedom.js</title>
      <link>http://www.freedomjs.org/tutorial/10howtohelpfreedom/</link>
      <pubDate>Thu, 26 Feb 2015 13:20:23 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/10howtohelpfreedom/</guid>
      <description>

&lt;h1 id=&#34;make-an-app:0d9f956dd8c7479f16894b65123eba61&#34;&gt;Make an app!&lt;/h1&gt;

&lt;p&gt;The single best thing you can do for freedom.js is to use the
knowledge you&amp;rsquo;ve gained from this tutorial and go out and make
something - any app, large or small, that is built to enable
decentralization makes the entire decentralized ecosystem stronger. So
go out and create, whether it&amp;rsquo;s a game or a tool, a quick hack or a
longterm project, and share your creation with the world.&lt;/p&gt;

&lt;h1 id=&#34;give-us-feedback:0d9f956dd8c7479f16894b65123eba61&#34;&gt;Give us feedback&lt;/h1&gt;

&lt;p&gt;As you&amp;rsquo;re making an app you may think of things you wish were
different about freedom.js - maybe a new feature it could support,
or a bug that should be
fixed. &lt;a href=&#34;https://github.com/freedomjs/freedom/issues&#34;&gt;GitHub issues&lt;/a&gt;
are our preferred workflow for this sort of feedback, and we also have
a
&lt;a href=&#34;https://groups.google.com/forum/#!forum/freedomjs-users&#34;&gt;freedomjs-users Google group&lt;/a&gt;
for updates and discussion.&lt;/p&gt;

&lt;h1 id=&#34;develop-freedom-js-providers:0d9f956dd8c7479f16894b65123eba61&#34;&gt;Develop freedom.js providers&lt;/h1&gt;

&lt;p&gt;freedom.js provides basic providers for all its interfaces, but you
can also create new providers that satisfy the same interfaces,
expanding the realm of freedom.js functionality. For instance, a new
social provider compatible with the latest hip social network would
allow freedom.js apps (old and new) to seamlessly adopt it as an
alternative to the existing social network providers.&lt;/p&gt;

&lt;h1 id=&#34;contribute-to-freedom-js:0d9f956dd8c7479f16894b65123eba61&#34;&gt;Contribute to freedom.js&lt;/h1&gt;

&lt;p&gt;freedom.js is developed in the open across our
&lt;a href=&#34;https://github.com/freedomjs&#34;&gt;GitHub repos&lt;/a&gt;, and we welcome
&lt;a href=&#34;https://github.com/freedomjs/freedom/pulls&#34;&gt;pull requests&lt;/a&gt; with
contributions. Note that contributions to the core of freedom.js are
different from writing your own providers - they should be something
that is useful to all freedom.js users (such as a bugfix or new
compatibility shim).&lt;/p&gt;

&lt;p&gt;Thanks for reading, and Hack On!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>License</title>
      <link>http://www.freedomjs.org/tutorial/license/</link>
      <pubDate>Thu, 26 Feb 2015 13:19:37 -0800</pubDate>
      
      <guid>http://www.freedomjs.org/tutorial/license/</guid>
      <description>&lt;p&gt;Copyright 2015, Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>